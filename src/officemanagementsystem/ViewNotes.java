/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package officemanagementsystem;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.lang.*;
import java.sql.SQLException;


/**
 *
 * @author antoine
 */
public class ViewNotes extends javax.swing.JFrame {
    
    Connection conn = null;
    PreparedStatement pst = null;
    ResultSet rs=null;
   DefaultTableModel model = new DefaultTableModel();
   

    /**
     * Creates new form ViewNotes
     */
    public ViewNotes() {
        initComponents();
        
       // conn=ViewNotes.ConnectDb();
        conn=MyNoteDB.connect();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
   /* public static Connection ConnectDb()
    {
    try
    {
    Class.forName("org.sqlite.JDBC");
    Connection conn = DriverManager.getConnection("jdbc:sqlite:MyNotes.db");
    return conn;
    }
    catch(Exception e)
    {
    JOptionPane.showMessageDialog(null,e);
    return null;
    }
    }*/
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        searchbox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextnote = new javax.swing.JTextPane();
        jLabel3 = new javax.swing.JLabel();
        jButtonEdit = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        textsearch = new javax.swing.JTextField();
        find = new javax.swing.JButton();
        jButtonDelele = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Search Page");

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/istockphoto-1053519140-612x612.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");

        jLabel2.setText("Criteria for Search");

        searchbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "by Date", "by Subject", "All" }));
        searchbox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                searchboxItemStateChanged(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Date", "Time", "Subject", "Importance"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jScrollPane2.setViewportView(jTextnote);

        jLabel3.setText("View Details");

        jButtonEdit.setText("Edit");
        jButtonEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonEditMouseClicked(evt);
            }
        });

        jButton3.setText("Back");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        textsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textsearchKeyReleased(evt);
            }
        });

        find.setText("Find");
        find.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                findMouseClicked(evt);
            }
        });

        jButtonDelele.setText("Delete");
        jButtonDelele.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonDeleleMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(32, 32, 32)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(find)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(searchbox, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(textsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(37, 37, 37))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonDelele)
                .addGap(18, 18, 18)
                .addComponent(jButtonEdit)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addGap(58, 58, 58))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(searchbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addComponent(find)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonEdit)
                    .addComponent(jButton3)
                    .addComponent(jButtonDelele))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        Menu obj = new Menu();
        obj.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton3MouseClicked

    private void textsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textsearchKeyReleased
        // TODO add your handling code here:
     /*   try
        {
         String sql="select *from MyNotes where sybject=?";
         pst=conn.prepareStatement(sql);
         pst.setString(1,textsearch.getText());
         rs=pst.executeQuery();
         Object[] columnData= new Object[4];
             while(rs.next()){
             columnData[0]=rs.getString("date");
             columnData[1]=rs.getString("time");
             columnData[2]=rs.getString("sybject");
             columnData[3]=rs.getString("importance");
             model.addRow(columnData);
             
             Object col[]={"date","time","sybject","importance"};
             model.setColumnIdentifiers(col);
             jTable1.setModel(model);
             }
            
             
             
         }
        catch(Exception e)
        {
        
        }*/
    
        
    }//GEN-LAST:event_textsearchKeyReleased

    private void findMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_findMouseClicked
        // TODO add your handling code here:
        model.setRowCount(0);
        String searchType= searchbox.getSelectedItem().toString();
        if(searchType=="by Date"){
        try
        {
         String sql="select *from MYNOTES where date=?";
         pst=conn.prepareStatement(sql);
         pst.setString(1,textsearch.getText());
         rs=pst.executeQuery();
         Object[] columnData= new Object[5];
             while(rs.next()){
             columnData[0]=rs.getString("date");
             columnData[1]=rs.getString("time");
             columnData[2]=rs.getString("sybject");
             columnData[3]=rs.getString("importance");
             columnData[4]=rs.getString("notes");
             model.addRow(columnData);
             
             Object col[]={"date","time","sybject","importance","notes"};
             model.setColumnIdentifiers(col);
             jTable1.setModel(model);
             }
            
             
             
         }
        catch(Exception e)
        {
        
        }
        }
        else if(searchType=="by Subject"){
        try
        {
         String sql="select *from MYNOTES where sybject=?";
         pst=conn.prepareStatement(sql);
         pst.setString(1,textsearch.getText());
         rs=pst.executeQuery();
         Object[] columnData= new Object[5];
             while(rs.next()){
             columnData[0]=rs.getString("date");
             columnData[1]=rs.getString("time");
             columnData[2]=rs.getString("sybject");
             columnData[3]=rs.getString("importance");
             columnData[4]=rs.getString("notes");
             model.addRow(columnData);
             
             Object col[]={"date","time","sybject","importance","notes"};
             model.setColumnIdentifiers(col);
             jTable1.setModel(model);
             }
            
             
             
         }
        catch(Exception e)
        {
        
        }
        
        }
        else if(searchType=="All"){
        
        try
        {
         String sql="select *from MYNOTES";
         pst=conn.prepareStatement(sql);
         //pst.setString(1,textsearch.getText());
         rs=pst.executeQuery();
        Object[] columnData= new Object[5];
             while(rs.next()){
             columnData[0]=rs.getString("date");
             columnData[1]=rs.getString("time");
             columnData[2]=rs.getString("sybject");
             columnData[3]=rs.getString("importance");
             columnData[4]=rs.getString("notes");
             model.addRow(columnData);
             
             Object col[]={"date","time","sybject","importance","notes"};
             model.setColumnIdentifiers(col);
             jTable1.setModel(model);
             }
            
             
             
         }
        catch(Exception e)
        {
        
        }
        }
        
        
    }//GEN-LAST:event_findMouseClicked

    private void searchboxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_searchboxItemStateChanged
        // TODO add your handling code here:
        
       
    }//GEN-LAST:event_searchboxItemStateChanged
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int column=4;
        int row = jTable1.getSelectedRow();
        jTextnote.setText((String)jTable1.getModel().getValueAt(row,column));
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButtonDeleleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonDeleleMouseClicked
        // TODO add your handling code here:
        String sql = "DELETE FROM MYNOTES WHERE notes = ?";
 
        try {
            int row = jTable1.getSelectedRow();
           
           // PreparedStatement pstmt = conn.prepareStatement(sql);
            pst=conn.prepareStatement(sql);
            // where id = ?
            pst.setString(1, (String) jTable1.getValueAt(row, 4));
            
            //update
            pst.executeUpdate();
            
            
            
            
            JOptionPane.showMessageDialog(null, "The note is deleted for good");
                
            //log
            System.out.println("Note Deleted! ");
        } catch (SQLException e) {
            
            //log
            System.out.println(e.getMessage());
        }
        
    }//GEN-LAST:event_jButtonDeleleMouseClicked

    private void jButtonEditMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonEditMouseClicked
        // TODO add your handling code here:
        
        
        String sql = "UPDATE  MYNOTES SET notes = ? WHERE time = ?" ;
 
        try {
            int row = jTable1.getSelectedRow();
            
           // PreparedStatement pstmt = conn.prepareStatement(sql);
            pst=conn.prepareStatement(sql);
            
            pst.setString(1,jTextnote.getText());
            pst.setString(2, (String) jTable1.getValueAt(row, 1));
            
            //update
            pst.executeUpdate();
            
            
            
            
            JOptionPane.showMessageDialog(null, "The note is updated for good");
                
            //log
            System.out.println("Note edited! ");
        } catch (SQLException e) {
            
            //log
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jButtonEditMouseClicked
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewNotes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewNotes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewNotes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewNotes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewNotes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton find;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonDelele;
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextPane jTextnote;
    private javax.swing.JComboBox<String> searchbox;
    private javax.swing.JTextField textsearch;
    // End of variables declaration//GEN-END:variables
}
